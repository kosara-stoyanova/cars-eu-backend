name: Deploy Offers service to Google Kubernetes Engine

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  create-cluster:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.4.0
        with:
          project_id: cars-eu
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Build and Push Docker image, Configure Docker to use gcloud, and Apply Kubernetes resources
        run: |
          if gcloud container clusters describe cars-eu-cluster --zone europe-west4 &> /dev/null; then
          echo "Kubernetes cluster cars-eu-cluster already exists. Skipping cluster creation."
          else
          gcloud components install kubectl
          gcloud container --project "cars-eu" clusters create-auto "cars-eu-cluster" --region "europe-west4" --release-channel "regular" --network "projects/cars-eu/global/networks/default" --subnetwork "projects/cars-eu/regions/europe-west4/subnetworks/default" --cluster-ipv4-cidr "/17" --services-ipv4-cidr "/22"
          fi

  deploy-api-gateway:
    needs: create-cluster
    runs-on: ubuntu-latest

    steps:
      - name: Log in to Docker
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.4.0
        with:
          project_id: cars-eu
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up environment variables
        env:
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        run: |
          mkdir -p $GITHUB_WORKSPACE/api-gateway/.serviceAccounts
          echo "$FIREBASE_SERVICE_ACCOUNT" > $GITHUB_WORKSPACE/api-gateway/.serviceAccounts/service-account.base64
          base64 -d $GITHUB_WORKSPACE/api-gateway/.serviceAccounts/service-account.base64 > $GITHUB_WORKSPACE/api-gateway/.serviceAccounts/service-account.json

      - name: Configure Docker
        run: |
          cd api-gateway
          gcloud auth configure-docker europe-west4-docker.pkg.dev
          docker build -t europe-west4-docker.pkg.dev/cars-eu/cars-eu/api-gateway:latest -f Dockerfile .
          docker push europe-west4-docker.pkg.dev/cars-eu/cars-eu/api-gateway:latest

      - name: Upload Kubernetes config
        run: |
          gcloud components install kubectl
          gcloud container --project "cars-eu" clusters get-credentials cars-eu-cluster --zone europe-west4
          cd kubernetes
          kubectl apply -f api-gateway-config.yml -f api-gateway-loadbalancer.yml

  deploy-offers-service:
    needs: create-cluster
    runs-on: ubuntu-latest

    steps:
      - name: Log in to Docker
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.4.0
        with:
          project_id: cars-eu
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure Docker
        run: |
          cd offers-service
          gcloud auth configure-docker europe-west4-docker.pkg.dev
          docker build -t europe-west4-docker.pkg.dev/cars-eu/cars-eu/offers-service:latest -f Dockerfile .
          docker push europe-west4-docker.pkg.dev/cars-eu/cars-eu/offers-service:latest

      - name: Upload Kubernetes config
        run: |
          gcloud components install kubectl
          gcloud container --project "cars-eu" clusters get-credentials cars-eu-cluster --zone europe-west4
          cd kubernetes
          kubectl apply -f offers-service-config.yml -f offers-service-loadbalancer.yml

  deploy-transactions-service:
    needs: create-cluster
    runs-on: ubuntu-latest

    steps:
      - name: Log in to Docker
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.4.0
        with:
          project_id: cars-eu
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure Docker
        run: |
          cd transactions-service
          gcloud auth configure-docker europe-west4-docker.pkg.dev
          docker build -t europe-west4-docker.pkg.dev/cars-eu/cars-eu/transactions-service:latest -f Dockerfile .
          docker push europe-west4-docker.pkg.dev/cars-eu/cars-eu/transactions-service:latest

      - name: Upload Kubernetes config
        run: |
          gcloud components install kubectl
          gcloud container --project "cars-eu" clusters get-credentials cars-eu-cluster --zone europe-west4
          cd kubernetes
          kubectl apply -f transactions-service-config.yml -f transactions-service-loadbalancer.yml
