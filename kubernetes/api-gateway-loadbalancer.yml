apiVersion: v1
kind: Service
metadata:
  annotations:
    cloud.google.com/neg: '{"ingress":true}'
  creationTimestamp: "2023-05-18T13:51:35Z"
  finalizers:
    - service.kubernetes.io/load-balancer-cleanup
  generateName: api-gateway-service-deployment-
  labels:
    app: api-gateway
  managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
        f:spec:
          f:allocateLoadBalancerNodePorts: {}
          f:externalTrafficPolicy: {}
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":80,"protocol":"TCP"}:
              .: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: GoogleCloudConsole
      operation: Update
      time: "2023-05-18T13:51:35Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:finalizers:
            .: {}
            v:"service.kubernetes.io/load-balancer-cleanup": {}
        f:status:
          f:loadBalancer:
            f:ingress: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-05-18T13:52:16Z"
  name: api-gateway-deployment-wr7dj
  namespace: default
  resourceVersion: "170386"
  uid: 63578129-0bed-40a3-9eda-243f9da3ac72
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: 10.25.2.172
  clusterIPs:
    - 10.25.2.172
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  ports:
    - nodePort: 31480
      port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    app: api-gateway
  sessionAffinity: None
  type: LoadBalancer
status:
  loadBalancer:
    ingress:
      - ip: 34.90.128.88
