version: '3'

services:
  # rabbitmq:
  #   container_name: rabbitmq-container
  #   hostname: rabbit
  #   image: rabbitmq:3-management
  #   ports:
  #     # AMQP protocol port
  #     - "5672:5672"
  #     # HTTP management UI
  #     - "15672:15672"
  #   environment:
  #     - RABBITMQ_DEFAULT_USER=guest
  #     - RABBITMQ_DEFAULT_PASS=guest
  #   healthcheck:
  #     test: [ "CMD", "rabbitmqctl", "status" ]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 5
  #   networks:
  #     - carseu-network

  offers-service:
    container_name: offers-service-container
    hostname: offers-service
    build: ./offers-service
    ports:
      - "8081:8081"
    image: offers-service
    env_file:
      - ./offers-service/.env.${NODE_ENV}
    command: sh -c "npm run ${NODE_ENV}"
    restart: on-failure
    # depends_on:
    #   rabbitmq:
    #     condition: service_healthy
    networks:
      - carseu-network

  offers-service-1:
    container_name: offers-service-container-1
    hostname: offers-service
    build: ./offers-service
    ports:
      - "8084:8081"
    image: offers-service
    env_file:
      - ./offers-service/.env.${NODE_ENV}
    command: sh -c "npm run ${NODE_ENV}"
    restart: on-failure
    # depends_on:
    #   rabbitmq:
    #     condition: service_healthy
    networks:
      - carseu-network

  transactions-service:
    container_name: transactions-service-container
    hostname: transactions-service
    build: ./transactions-service
    ports:
      - "8082:8082"
    image: transactions-service
    env_file:
      - ./transactions-service/.env.${NODE_ENV}
    command: sh -c "npm run ${NODE_ENV}"
    restart: on-failure
    # depends_on:
    #   rabbitmq:
    #     condition: service_healthy
    networks:
      - carseu-network

  api-gateway:
    container_name: api-gateway-container
    build: ./api-gateway
    ports:
      - "8080:8080"
    image: api-gateway
    restart: on-failure
    # depends_on:
    #   rabbitmq:
    #     condition: service_healthy
    networks:
      - carseu-network

networks:
  carseu-network:
    driver: bridge
